{"version":3,"file":"static/js/9993.b12ea376.chunk.js","mappings":"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","sources":["views/pages/lists/CareerList.js"],"sourcesContent":["\nimport {\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CButton,\n  CFormInput,\n  CContainer,\n  CRow,\n  CImage,\n  CCol\n} from '@coreui/react'\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport ImageShow from 'src/components/ImageShow';\nimport { API, axiosInstance, downloadUploadCV, fetchImage, isEmpty, convertfirstletter } from 'src/globalfunction';\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\"\nimport * as Images from '../../../assets';\n\nconst CareerList = () => {\n  const [list, setList] = useState()\n\n  const onLoad = () => {\n    axiosInstance.get('v1.0/career/get-all-career').then(res => {\n      if (res?.data?.status) {\n        setList(res?.data?.data)\n        console.log(\"role\", res?.data?.data)\n      }\n    }).catch(err => {\n      console.log(\"Error\", err)\n\n    })\n  }\n\n  const onDelete = (value) => {\n    axiosInstance.delete(`v1.0/career/delete_career/${value}`).then(res => {\n      if (res?.data?.status) {\n        alert(res?.data?.message)\n        onLoad()\n      }\n      else {\n        alert(res?.data?.message)\n      }\n    }).catch(err => {\n      alert(\"Something went wrong\")\n    })\n\n  }\n  useEffect(() => {\n    onLoad()\n  }\n    , [])\n\n\n\n  return (\n    <div className=\"table-responsive\">\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>#</CTableHeaderCell>\n            {/* <CTableHeaderCell scope=\"col\">{\"_id\"}</CTableHeaderCell> */}\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"First Name\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Last Name\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Email\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Contact Number\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Position\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Upload File\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Action\"}</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody className='body-divider'>\n          {list?.length > 0 && (list?.map((items, index) => (\n            <CTableRow key={index}>\n              <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n              {/* <CTableDataCell>{items?._id}</CTableDataCell> */}\n              <CTableDataCell>{convertfirstletter(items?.firstname)}</CTableDataCell>\n              <CTableDataCell>{convertfirstletter(items?.lastname)}</CTableDataCell>\n              <CTableDataCell>{items?.email}</CTableDataCell>\n              <CTableDataCell>{items?.phonenumber}</CTableDataCell>\n              <CTableDataCell>{items?.profession}</CTableDataCell>\n              <CTableDataCell>\n                {!isEmpty(items?.uploadcv) ? (\n                  <button onClick={() => downloadUploadCV(items.uploadcv)} className='downloadbtn'>\n                    Download PDF\n                  </button>\n                ) : \"\"}\n              </CTableDataCell>\n\n              <CTableDataCell>\n                <CRow>\n                  <CCol onClick={() => onDelete(items?._id)} className=''>\n                    <CImage\n\n                      rounded\n                      src={Images.delete_icon}\n\n                      className=\"icons\"\n                    />\n                  </CCol>\n                </CRow>\n\n                {/* <div color=\"link\" onClick={() => onDelete(items?._id)}>Delete</div> */}\n              </CTableDataCell>\n            </CTableRow>\n\n          )))}\n        </CTableBody>\n      </CTable>\n\n    </div>\n  )\n}\nexport default CareerList"],"names":["_useState","useState","_useState2","_slicedToArray","list","setList","onLoad","axiosInstance","then","res","_res$data","_res$data2","_res$data3","data","status","console","log","catch","err","useEffect","_jsx","className","children","_jsxs","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","length","map","items","index","CTableDataCell","convertfirstletter","firstname","lastname","email","phonenumber","profession","isEmpty","uploadcv","onClick","downloadUploadCV","CRow","CCol","value","_id","concat","_res$data4","_res$data5","_res$data6","alert","message","CImage","rounded","src","Images"],"sourceRoot":""}