{"version":3,"file":"static/js/3912.50468983.chunk.js","mappings":"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","sources":["views/pages/lists/TeamList.js"],"sourcesContent":["import {\n    CTable,\n    CTableHead,\n    CTableRow,\n    CTableHeaderCell,\n    CTableBody,\n    CTableDataCell,\n    CButton,\n    CRow,\n    CCol,\n    CImage\n  } from '@coreui/react'\n  import axios from 'axios';\n  import React, { useState, useEffect } from \"react\";\n  import { useNavigate } from 'react-router-dom';\n  import ImageShow from 'src/components/ImageShow';\n  import { API, convertfirstletter, fetchImage } from 'src/globalfunction';\n  import * as Images from '../../../assets';\n  import AddTeams from 'src/components/modals/AddTeams';\n  import { Pagination } from 'src/components/Pagination';\n  \n  const TeamList = () => {\n    const [userlist, setUserlist] = useState();\n    const [isshowform, setIsshowform] = useState();\n    const [updatedata, setUpdatedata] = useState();\n  const [showdata,setShowdata]=useState([])\n    const navigate = useNavigate();\n    const onLoad = () => {\n      \n      API.get('v.1.0/team/get-all-team-info').then(res => {\n        console.log(\"userlist\", res.data.data)\n        if (res?.data?.status) {\n            console.log('userlist', res?.data?.data)\n          setUserlist(res?.data?.data)\n          \n         \n        }\n      }).catch(err => {\n        console.log(\"Error\", err);\n        navigate('404')\n  \n      })\n    }\n\n  \n    const onUpdate = (items) => {\n      \n      // navigate('/users/register', { state: item })\n      setUpdatedata(items)\n    \n      // setUserlist(items)\n      // console.log('updatedata',item)\n      setIsshowform(true)\n    }\n  \n    // console.log('userlist', updatedata)\n  \n    const onDelete = (userid) => {\n      API.delete(`v.1.0/team/delete-team-info/${userid}`).then(res => {\n        if (res.data.status) {\n          onLoad()\n          alert(res.data.message)\n       \n        }\n      })\n    }\n    const onShowPagedata=(data)=>{\n     setShowdata(data)\n    }\n\n\n    useEffect(() => {\n      onLoad()\n}, [isshowform,updatedata])\n    return (\n      <>\n      <AddTeams isshowform={isshowform} onClose={() => setIsshowform(false)}\n          data={updatedata} \n            \n          />\n              <div className='table-responsive'>\n      \n        <div onClick={() => {setUpdatedata() ;setIsshowform(true)}} className='button-1 '>\n          {\"+ Add New Team Member\"}\n        </div>\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>#</CTableHeaderCell>\n              {/* <CTableHeaderCell scope=\"col\">{\"_id\"}</CTableHeaderCell> */}\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Name\"}</CTableHeaderCell>\n              {/* <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Last Name\"}</CTableHeaderCell> */}\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Email\"}</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Pincode\"}</CTableHeaderCell>\n              {/* <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Description\"}</CTableHeaderCell> */}\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Gender\"}</CTableHeaderCell>\n             \n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Photo\"}</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" className=' fw-bold'>{\"Action\"}</CTableHeaderCell>\n  \n            </CTableRow>\n          </CTableHead>\n          <CTableBody className='body-divider'>\n            {userlist?.length > 0 && (userlist?.map((items, index) => (\n              <CTableRow key={index}>\n                <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n                {/* <CTableDataCell>{items?._id}</CTableDataCell> */}\n                <CTableDataCell>{convertfirstletter(items?.first_name)} {items?.last_name}</CTableDataCell>\n                {/* <CTableDataCell>{items?.last_name}</CTableDataCell> */}\n                <CTableDataCell>{items?.email}</CTableDataCell>\n                <CTableDataCell>{items?.pincode}</CTableDataCell> \n                {/* <CTableDataCell>{items?.description}</CTableDataCell> */}\n                <CTableDataCell>{items?.gender}</CTableDataCell>\n              \n                <CTableDataCell>\n                  <ImageShow imageurl={items?.photo} />\n                </CTableDataCell>\n                <CTableDataCell>\n                  {/* <CButton color=\"link\" onClick={()=>onUpdate(items)}>Update</CButton> */}\n                  <CRow className='gym_action mx-auto'>\n                    <CCol>\n                      <CImage\n  \n                        rounded\n                        src={Images.eye_icon}\n  \n                        className=\"icons\"\n                      />\n  \n                    </CCol>\n                    <CCol onClick={() => onUpdate(items)}>\n                      <CImage\n  \n                        rounded\n                        src={Images.user_icon}\n  \n                        className=\"icons\"\n                      />\n                    </CCol>\n                    <CCol onClick={() => onDelete(items?._id)}>\n                      <CImage\n  \n                        rounded\n                        src={Images.delete_icon}\n  \n                        className=\"icons\"\n                      />\n                    </CCol>\n                  </CRow>\n                </CTableDataCell>\n        \n              </CTableRow>\n            )\n  ))}\n  \n  \n          </CTableBody>\n        </CTable>\n        {/* <Pagination data={userlist} onShowPage={(start,end,data)=>onShowPagedata(start,end,data)}/> */}\n      </div>\n      </>\n  \n    )\n  }\n  export default TeamList"],"names":["_useState","useState","_useState2","_slicedToArray","userlist","setUserlist","_useState3","_useState4","isshowform","setIsshowform","_useState5","_useState6","updatedata","setUpdatedata","_useState7","_useState8","navigate","useNavigate","onLoad","API","get","then","res","_res$data","_res$data2","_res$data3","console","log","data","status","catch","err","useEffect","_jsxs","_Fragment","children","_jsx","AddTeams","onClose","className","onClick","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","length","map","items","index","CTableDataCell","convertfirstletter","first_name","last_name","email","pincode","gender","ImageShow","imageurl","photo","CRow","CCol","CImage","rounded","src","Images","onUpdate","userid","_id","delete","concat","alert","message"],"sourceRoot":""}