{"version":3,"file":"static/js/2950.e3331cc3.chunk.js","mappings":"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","sources":["components/modals/AddVoucher.js","views/pages/lists/VoucherList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CImage,\r\n  CAlert,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilLockLocked, cilUser, cilEnvelopeClosed, cilBurn } from '@coreui/icons'\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\"\r\nimport { API, axiosInstance, isEmpty, baseurl } from 'src/globalfunction'\r\nimport axios from 'axios';\r\nimport * as Images from \"../../assets\";\r\nimport PropTypes from 'prop-types';\r\nimport ImageShow from \"../ImageShow\";\r\nimport Countries from '../../json/Countries.json'\r\nimport Occuption from '../../json/Occuption.json'\r\n\r\nconst AddVoucher = ({ isshowform, onClose, data }) => {\r\n \r\n  const [voucharname, setVouchername] = useState(data?.voucharname)\r\n    const [duration, setDuration] = useState(data?.duration)\r\n  const [durationunit, setDurationunit] = useState(data?.durationunit)\r\n  const [discount, setDiscount] = useState(data?.discount)\r\n  const [description, setDescription] = useState(data?.description)\r\nconst durationlist=[\"Day\",\"Month\",\"Year\"]\r\n\r\n\r\nconst onCreate=()=>{\r\n   let body={\r\n    voucharname:voucharname,\r\n    duration:duration,\r\n    durationunit:durationunit,\r\n    discount:discount,\r\n    description:description\r\n   }\r\n\r\n     API.post('v.1.0/voucher/add-new-voucher', body).then(res => {\r\n      console.log('update data', res?.data, data)\r\n     if (res?.data?.status === true) {\r\n        alert(res?.data?.message)\r\n    \r\n        onClose()\r\n      }\r\n      else{\r\n        alert(res?.data?.message)\r\n      }\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\n  return (\r\n\r\n    <CModal fullscreen=\"md\" visible={isshowform}\r\n      onClose={onClose}>\r\n      <CModalHeader>\r\n        <CModalTitle>{isEmpty(data?._id) ?'Add Voucher':\"Update Voucher\"}</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        {/* <CContainer className='ms-0'> */}\r\n        <CRow className=\"border mx-4 my-3 modal-shadow rounded\">\r\n          <CCol className='px-4 py-3'>\r\n     \r\n            <CForm className='text-start'>\r\n             <CCol>\r\n            \r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      {/* <CIcon icon={cilUser} /> */}\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                    defaultValue={data?.voucharname}\r\n                      value={voucharname}\r\n                      onChange={(e) => setVouchername(e.target.value)}\r\n                      placeholder=\"Voucher Name\" autoComplete=\"firstname\" />\r\n                  </CInputGroup>\r\n                </CCol>\r\n\r\n                <CCol>\r\n            \r\n            <CInputGroup className=\"mb-3\">\r\n              <CInputGroupText>\r\n                {/* <CIcon icon={cilUser} /> */}\r\n                <i className=\"fa fa-user\"></i>\r\n              </CInputGroupText>\r\n              <CFormInput\r\n              defaultValue={data?.description}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Voucher Description\" autoComplete=\"firstname\" />\r\n            </CInputGroup>\r\n          </CCol>\r\n\r\n\r\n\r\n                <CInputGroup className=\"mb-3\">\r\n                    {/* <CInputGroupText>@</CInputGroupText> */}\r\n                    <CInputGroupText>\r\n                      <i className=\"fa fa-location-arrow\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormSelect id=\"user_type\"\r\n               defaultValue={data?.duration}\r\n                      value={duration}\r\n                      onChange={(e) => setDuration(e.target.value)}>\r\n                      <option>Choose occuption...</option>\r\n                      {durationlist.map((item) => (\r\n                        <option key={item}>{item}</option>\r\n                      ))}\r\n                    </CFormSelect>\r\n                  </CInputGroup>\r\n          \r\n\r\n          \r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      {/* <CIcon icon={cilUser} /> */}\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                    type='number'\r\n                    defaultValue={data?.durationunit}\r\n                      value={durationunit}\r\n                      onChange={(e) => setDurationunit(e.target.value)}\r\n                      placeholder=\"Enter voucher duration per unit\"  />\r\n                  </CInputGroup>\r\n\r\n              \r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      {/* <CIcon icon={cilUser} /> */}\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                    type='number'\r\n                    defaultValue={data?.discount}\r\n                      value={discount}\r\n                      onChange={(e) => setDiscount(e.target.value)}\r\n                      placeholder=\"Enter voucher discount\"  />\r\n                  </CInputGroup>\r\n\r\n                   <div className=\"d-grid\">\r\n                  <CButton onClick={()=>onCreate()} className=\"update_btn\">Add Account</CButton>\r\n                </div>\r\n            </CForm>\r\n   \r\n          </CCol>\r\n        </CRow>\r\n  \r\n      </CModalBody>\r\n    </CModal>\r\n  )\r\n}\r\n\r\nexport default AddVoucher\r\nAddVoucher.propTypes = {\r\n  isshowform: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  data: PropTypes.object,\r\n\r\n};\r\n","import {\r\n    CTable,\r\n    CTableHead,\r\n    CTableRow,\r\n    CTableHeaderCell,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CButton,\r\n    CRow,\r\n    CCol,\r\n    CImage\r\n  } from '@coreui/react'\r\n  import axios from 'axios';\r\n  import React, { useState, useEffect } from \"react\";\r\n  import { useNavigate } from 'react-router-dom';\r\n  import ImageShow from 'src/components/ImageShow';\r\n  import { API, convertfirstletter, fetchImage } from 'src/globalfunction';\r\n  import * as Images from '../../../assets';\r\n  import AddTeams from 'src/components/modals/AddTeams';\r\n  import { Pagination } from 'src/components/Pagination';\r\nimport AddVoucher from 'src/components/modals/AddVoucher';\r\n  \r\n  const VoucherList = () => {\r\n    const [list, setList] = useState();\r\n    const [isshowform, setIsshowform] = useState();\r\n    const [updatedata, setUpdatedata] = useState();\r\n  const [showdata,setShowdata]=useState([])\r\n    const navigate = useNavigate();\r\n    const onLoad = () => {\r\n      \r\n      API.get('v.1.0/voucher/get-all-voucher').then(res => {\r\n        console.log(\"userlist\", res.data.data)\r\n        if (res?.data?.status) {\r\n            console.log('userlist', res?.data?.data)\r\n          setList(res?.data?.data)\r\n          \r\n         \r\n        }\r\n      }).catch(err => {\r\n        console.log(\"Error\", err);\r\n        navigate('404')\r\n  \r\n      })\r\n    }\r\n\r\n  \r\n    const onUpdate = (items) => {\r\n      \r\n      // navigate('/users/register', { state: item })\r\n      setUpdatedata(items)\r\n      console.log('updatae item', items)\r\n      // setUserlist(items)\r\n      // console.log('updatedata',item)\r\n      setIsshowform(true)\r\n    }\r\n  \r\n    // console.log('userlist', updatedata)\r\n  \r\n    const onDelete = (userid) => {\r\n      API.delete(`v.1.0/team/delete-team-info/${userid}`).then(res => {\r\n        if (res.data.status) {\r\n          onLoad()\r\n          alert(res.data.message)\r\n       \r\n        }\r\n      })\r\n    }\r\n    const onShowPagedata=(data)=>{\r\n     setShowdata(data)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      onLoad()\r\n}, [isshowform,updatedata])\r\n    return (\r\n      <>\r\n      <AddVoucher isshowform={isshowform} onClose={() => setIsshowform(false)}\r\n          data={updatedata} \r\n            \r\n          />\r\n          <div>\r\n              <div className='table-responsive'>\r\n      \r\n        <div onClick={() => {setUpdatedata() ;setIsshowform(true)}} className='button-1 '>\r\n          {\"+ Add New Voucher\"}\r\n        </div>\r\n        <CTable>\r\n          <CTableHead>\r\n            <CTableRow>\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>#</CTableHeaderCell>\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Name\"}</CTableHeaderCell>\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Description\"}</CTableHeaderCell>\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Discount\"}</CTableHeaderCell>\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Duration\"}</CTableHeaderCell>\r\n              <CTableHeaderCell scope=\"col\" className=' fw-bold'>{\"Voucher code\"}</CTableHeaderCell>\r\n              <CTableHeaderCell scope=\"col\" className=' fw-bold'>{\"Action\"}</CTableHeaderCell>\r\n        \r\n            </CTableRow>\r\n          </CTableHead>\r\n          <CTableBody className='body-divider'>\r\n            {list?.length > 0 && (list?.map((items, index) => (\r\n              <CTableRow key={index}>\r\n                <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"row\">{items?.voucharname}</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"row\">{items?.description}</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"row\">{items?.discount}</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"row\">{items?.duration}</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"row\">{items?.voucharcode}</CTableHeaderCell>\r\n                  {/* <CButton color=\"link\" onClick={()=>onUpdate(items)}>Update</CButton> */}\r\n                  <CTableDataCell>\r\n                  <CRow className='gym_action mx-auto'>\r\n                    <CCol>\r\n                      <CImage\r\n  \r\n                        rounded\r\n                        src={Images.eye_icon}\r\n  \r\n                        className=\"icons\"\r\n                      />\r\n  \r\n                    </CCol>\r\n                    <CCol onClick={() => onUpdate(items)}>\r\n                      <CImage\r\n  \r\n                        rounded\r\n                        src={Images.user_icon}\r\n  \r\n                        className=\"icons\"\r\n                      />\r\n                    </CCol>\r\n                    <CCol onClick={() => onDelete(items?._id)}>\r\n                      <CImage\r\n  \r\n                        rounded\r\n                        src={Images.delete_icon}\r\n  \r\n                        className=\"icons\"\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </CTableDataCell>\r\n        \r\n              </CTableRow>\r\n            )\r\n  ))}\r\n  \r\n  \r\n          </CTableBody>\r\n        </CTable>\r\n        \r\n        {/* <Pagination data={userlist} onShowPage={(start,end,data)=>onShowPagedata(start,end,data)}/> */}\r\n      </div>\r\n  \r\n     \r\n     \r\n      </div>\r\n  </>\r\n    )\r\n  }\r\n  export default VoucherList"],"names":["_ref","isshowform","onClose","data","_useState","useState","voucharname","_useState2","_slicedToArray","setVouchername","_useState3","duration","_useState4","setDuration","_useState5","durationunit","_useState6","setDurationunit","_useState7","discount","_useState8","setDiscount","_useState9","description","_useState10","setDescription","_jsxs","CModal","fullscreen","visible","children","_jsx","CModalHeader","CModalTitle","isEmpty","_id","CModalBody","CRow","className","CCol","CForm","CInputGroup","CInputGroupText","CFormInput","defaultValue","value","onChange","e","target","placeholder","autoComplete","CFormSelect","id","map","item","type","CButton","onClick","body","API","then","res","_res$data","_res$data2","_res$data3","console","log","status","alert","message","onCreate","list","setList","setIsshowform","updatedata","setUpdatedata","navigate","useNavigate","onLoad","catch","err","useEffect","_Fragment","AddVoucher","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","length","items","index","voucharcode","CTableDataCell","CImage","rounded","src","Images","onUpdate","userid","concat"],"sourceRoot":""}