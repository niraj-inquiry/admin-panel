{"version":3,"file":"static/js/2612.ab86fc3a.chunk.js","mappings":"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","sources":["components/modals/AddVoucher.js","views/pages/lists/FeedbackList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CImage,\n  CAlert,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser, cilEnvelopeClosed, cilBurn } from '@coreui/icons'\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\"\nimport { API, axiosInstance, isEmpty, baseurl } from 'src/globalfunction'\nimport axios from 'axios';\nimport * as Images from \"../../assets\";\nimport PropTypes from 'prop-types';\nimport ImageShow from \"../ImageShow\";\nimport Countries from '../../json/Countries.json'\nimport Occuption from '../../json/Occuption.json'\n\nconst AddVoucher = ({ isshowform, onClose, data }) => {\n \n  const [voucharname, setVouchername] = useState(data?.voucharname)\n    const [duration, setDuration] = useState(data?.duration)\n  const [durationunit, setDurationunit] = useState(data?.durationunit)\n  const [discount, setDiscount] = useState(data?.discount)\n  const [description, setDescription] = useState(data?.description)\nconst durationlist=[\"Day\",\"Month\",\"Year\"]\n\n\nconst onCreate=()=>{\n   let body={\n    voucharname:voucharname,\n    duration:duration,\n    durationunit:durationunit,\n    discount:discount,\n    description:description\n   }\n\n     API.post('v.1.0/voucher/add-new-voucher', body).then(res => {\n      console.log('update data', res?.data, data)\n     if (res?.data?.status === true) {\n        alert(res?.data?.message)\n    \n        onClose()\n      }\n      else{\n        alert(res?.data?.message)\n      }\n\n    })\n\n}\n\n\n  return (\n\n    <CModal fullscreen=\"md\" visible={isshowform}\n      onClose={onClose}>\n      <CModalHeader>\n        <CModalTitle>{isEmpty(data?._id) ?'Add Voucher':\"Update Voucher\"}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        {/* <CContainer className='ms-0'> */}\n        <CRow className=\"border mx-4 my-3 modal-shadow rounded\">\n          <CCol className='px-4 py-3'>\n     \n            <CForm className='text-start'>\n             <CCol>\n            \n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      {/* <CIcon icon={cilUser} /> */}\n                      <i className=\"fa fa-user\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                    defaultValue={data?.voucharname}\n                      value={voucharname}\n                      onChange={(e) => setVouchername(e.target.value)}\n                      placeholder=\"Voucher Name\" autoComplete=\"firstname\" />\n                  </CInputGroup>\n                </CCol>\n\n                <CCol>\n            \n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                {/* <CIcon icon={cilUser} /> */}\n                <i className=\"fa fa-user\"></i>\n              </CInputGroupText>\n              <CFormInput\n              defaultValue={data?.description}\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                placeholder=\"Voucher Description\" autoComplete=\"firstname\" />\n            </CInputGroup>\n          </CCol>\n\n\n\n                <CInputGroup className=\"mb-3\">\n                    {/* <CInputGroupText>@</CInputGroupText> */}\n                    <CInputGroupText>\n                      <i className=\"fa fa-location-arrow\"></i>\n                    </CInputGroupText>\n                    <CFormSelect id=\"user_type\"\n               defaultValue={data?.duration}\n                      value={duration}\n                      onChange={(e) => setDuration(e.target.value)}>\n                      <option>Choose occuption...</option>\n                      {durationlist.map((item) => (\n                        <option key={item}>{item}</option>\n                      ))}\n                    </CFormSelect>\n                  </CInputGroup>\n          \n\n          \n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      {/* <CIcon icon={cilUser} /> */}\n                      <i className=\"fa fa-user\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                    type='number'\n                    defaultValue={data?.durationunit}\n                      value={durationunit}\n                      onChange={(e) => setDurationunit(e.target.value)}\n                      placeholder=\"Enter voucher duration per unit\"  />\n                  </CInputGroup>\n\n              \n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      {/* <CIcon icon={cilUser} /> */}\n                      <i className=\"fa fa-user\"></i>\n                    </CInputGroupText>\n                    <CFormInput\n                    type='number'\n                    defaultValue={data?.discount}\n                      value={discount}\n                      onChange={(e) => setDiscount(e.target.value)}\n                      placeholder=\"Enter voucher discount\"  />\n                  </CInputGroup>\n\n                   <div className=\"d-grid\">\n                  <CButton onClick={()=>onCreate()} className=\"update_btn\">Add Account</CButton>\n                </div>\n            </CForm>\n   \n          </CCol>\n        </CRow>\n  \n      </CModalBody>\n    </CModal>\n  )\n}\n\nexport default AddVoucher\nAddVoucher.propTypes = {\n  isshowform: PropTypes.bool,\n  onClose: PropTypes.func,\n  data: PropTypes.object,\n\n};\n","import {\n    CTable,\n    CTableHead,\n    CTableRow,\n    CTableHeaderCell,\n    CTableBody,\n    CTableDataCell,\n    CButton,\n    CRow,\n    CCol,\n    CImage\n  } from '@coreui/react'\n  import axios from 'axios';\n  import React, { useState, useEffect } from \"react\";\n  import { useNavigate } from 'react-router-dom';\n  import ImageShow from 'src/components/ImageShow';\n  import { API, convertfirstletter, fetchImage } from 'src/globalfunction';\n  import * as Images from '../../../assets';\n  import AddTeams from 'src/components/modals/AddTeams';\n  import { Pagination } from 'src/components/Pagination';\nimport AddVoucher from 'src/components/modals/AddVoucher';\nimport AddFeedback from 'src/components/modals/AddFeedback';\n  \n  const FeedbackList = () => {\n    const [list, setList] = useState();\n    const [isshowform, setIsshowform] = useState();\n    const [updatedata, setUpdatedata] = useState();\n  const [showdata,setShowdata]=useState([])\n    const navigate = useNavigate();\n    const onLoad = () => {\n      \n      API.get('v.1.0/feedbackwithrating/get-all-feedback').then(res => {\n       if (res?.data?.status) {\n           setList(res?.data?.data)\n        }\n      }).catch(err => {\n        console.log(\"Error\", err);\n        navigate('404')\n  \n      })\n    }\n\n  \n    const onUpdate = (items) => {\n      \n      // navigate('/users/register', { state: item })\n      setUpdatedata(items)\n      console.log('updatae item', items)\n      // setUserlist(items)\n      // console.log('updatedata',item)\n      setIsshowform(true)\n    }\n  \n    // console.log('userlist', updatedata)\n  \n    const onDelete = (feedid) => {\n      API.delete(`v.1.0/feedbackwithrating/delete_data/${feedid}`).then(res => {\n        if (res.data.status) {\n         alert(res.data.message)\n          onLoad()\n        }\n      })\n    }\n    const onShowPagedata=(data)=>{\n     setShowdata(data)\n    }\n\n\n    useEffect(() => {\n      onLoad()\n}, [isshowform,updatedata])\n    return (\n      <>\n      {/* <AddFeedback isshowform={isshowform} onClose={() => setIsshowform(false)}\n          data={updatedata} \n            \n          /> */}\n          <div>\n              <div className='table-responsive'>\n      \n        {/* <div onClick={() => {setUpdatedata() ;setIsshowform(true)}} className='button-1 '>\n          {\"+Add New Feedback\"}\n        </div> */}\n        <CTable>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>#</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Center Name\"}</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Rating\"}</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Comment\"}</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"User Name\"}</CTableHeaderCell>\n           \n              <CTableHeaderCell scope=\"col\" className=' fw-bold'>{\"Action\"}</CTableHeaderCell>\n        \n            </CTableRow>\n          </CTableHead>\n          <CTableBody className='body-divider'>\n            {list?.length > 0 && (list?.map((items, index) => (\n              <CTableRow key={index}>\n                <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n                <CTableHeaderCell scope=\"row\">{items?.center_name}</CTableHeaderCell>\n                <CTableHeaderCell scope=\"row\">{items?.rating}</CTableHeaderCell>\n                <CTableHeaderCell scope=\"row\">{items?.comment}</CTableHeaderCell>\n                {/* <CTableHeaderCell scope=\"row\">{items?.comment}</CTableHeaderCell>\n                */}\n                <CTableHeaderCell scope=\"row\">{items?.first_name +items?.last_name}</CTableHeaderCell>\n             \n                  {/* <CButton color=\"link\" onClick={()=>onUpdate(items)}>Update</CButton> */}\n                  <CTableDataCell>\n                  <CRow className='gym_action mx-auto'>\n                    <CCol>\n                      <CImage\n                     rounded\n                        src={Images.eye_icon}\n                       className=\"icons\"\n                      />\n  \n                    </CCol>\n                    <CCol onClick={() => onUpdate(items)}>\n                      <CImage\n  \n                        rounded\n                        src={Images.user_icon}\n  \n                        className=\"icons\"\n                      />\n                    </CCol>\n                    <CCol onClick={() => onDelete(items?._id)}>\n                      <CImage\n  \n                        rounded\n                        src={Images.delete_icon}\n  \n                        className=\"icons\"\n                      />\n                    </CCol>\n                  </CRow>\n                </CTableDataCell>\n        \n              </CTableRow>\n            )\n  ))}\n  \n  \n          </CTableBody>\n        </CTable>\n        \n        {/* <Pagination data={userlist} onShowPage={(start,end,data)=>onShowPagedata(start,end,data)}/> */}\n      </div>\n  \n     \n     \n      </div>\n  </>\n    )\n  }\n  export default FeedbackList"],"names":["_ref","isshowform","onClose","data","_useState","useState","voucharname","_useState2","_slicedToArray","setVouchername","_useState3","duration","_useState4","setDuration","_useState5","durationunit","_useState6","setDurationunit","_useState7","discount","_useState8","setDiscount","_useState9","description","_useState10","setDescription","_jsxs","CModal","fullscreen","visible","children","_jsx","CModalHeader","CModalTitle","isEmpty","_id","CModalBody","CRow","className","CCol","CForm","CInputGroup","CInputGroupText","CFormInput","defaultValue","value","onChange","e","target","placeholder","autoComplete","CFormSelect","id","map","item","type","CButton","onClick","body","API","post","then","res","_res$data","_res$data2","_res$data3","console","log","status","alert","message","onCreate","list","setList","setIsshowform","updatedata","setUpdatedata","navigate","useNavigate","onLoad","get","catch","err","useEffect","_Fragment","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","length","items","index","center_name","rating","comment","first_name","last_name","CTableDataCell","CImage","rounded","src","Images","onUpdate","feedid","delete","concat"],"sourceRoot":""}