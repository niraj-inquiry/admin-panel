{"version":3,"file":"static/js/6675.f6f45753.chunk.js","mappings":"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","sources":["views/pages/lists/ContactusList.js"],"sourcesContent":["\nimport {\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CButton,\n  CFormInput,\n  CContainer,\n  CImage\n} from '@coreui/react'\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport ImageShow from 'src/components/ImageShow';\nimport { API, axiosInstance, fetchImage, convertfirstletter } from 'src/globalfunction';\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\"\nimport * as Images from '../../../assets';\n\nconst ContactusList = () => {\n  const [list, setList] = useState()\n\n  const navigate = useNavigate()\n  const onLoad = () => {\n    axiosInstance.get('v1.0/contact/get-all-contact').then(res => {\n      if (res?.data?.status) {\n        setList(res?.data?.data)\n        console.log(\"role\", res?.data?.data)\n      }\n    }).catch(err => {\n      console.log(\"Error\", err)\n\n    })\n  }\n\n  const onDelete = (value) => {\n    axiosInstance.delete(`v1.0/contact/delete_contactus/${value}`).then(res => {\n      if (res?.data?.status) {\n        alert(res?.data?.message)\n        onLoad()\n      }\n      else {\n        alert(res?.data?.message)\n      }\n    }).catch(err => {\n      alert(\"Something went wrong\")\n    })\n\n  }\n  useEffect(() => {\n    onLoad()\n  }\n    , [])\n\n  return (\n    <div>\n\n      <CTable>\n        <CTableHead>\n          <CTableRow>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>#</CTableHeaderCell>\n            {/* <CTableHeaderCell scope=\"col\">{\"_id\"}</CTableHeaderCell> */}\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"First Name\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Last Name\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Email\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Contact Number\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Message\"}</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Action\"}</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody className='body-divider'>\n          {list?.length > 0 && (list?.map((items, index) => (\n            <CTableRow key={index}>\n              <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n              {/* <CTableDataCell>{items?._id}</CTableDataCell> */}\n              <CTableDataCell>{convertfirstletter(items?.firstname)}</CTableDataCell>\n              <CTableDataCell>{convertfirstletter(items?.lastname)}</CTableDataCell>\n              <CTableDataCell>{items?.email}</CTableDataCell>\n              <CTableDataCell>{items?.phonenumber}</CTableDataCell>\n              <CTableDataCell>{items?.message}</CTableDataCell>\n\n              <CTableDataCell>\n                {/* <CButton color=\"link\" onClick={()=>onDelete(items?._id)}>Delete</CButton> */}\n                <CImage\n\n                  rounded\n                  src={Images.delete_icon}\n\n                  className=\"icons\"\n                />\n              </CTableDataCell>\n            </CTableRow>\n\n          )))}\n        </CTableBody>\n      </CTable>\n\n    </div>\n  )\n}\nexport default ContactusList"],"names":["_useState","useState","_useState2","_slicedToArray","list","setList","onLoad","useNavigate","axiosInstance","get","then","res","_res$data","_res$data2","_res$data3","data","status","console","log","catch","err","useEffect","_jsx","children","_jsxs","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","className","CTableBody","length","map","items","index","CTableDataCell","convertfirstletter","firstname","lastname","email","phonenumber","message","CImage","rounded","src","Images"],"sourceRoot":""}