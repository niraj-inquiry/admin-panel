{"version":3,"file":"static/js/1495.eb18a13b.chunk.js","mappings":"wQAmFA,EAhFkB,WACd,IAAAA,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAkDL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvDE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAgBtCG,EAAqB,WACzBC,EAAAA,EACGC,IAAI,wDACJC,MAAK,SAACC,GACLL,EAAqBK,EAAIC,KAAKA,KAChC,IACCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,EAKF,OAJEG,EAAAA,EAAAA,YAAU,WACRV,GAEF,GAAG,KAELW,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACGF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UAC1BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,MAAKD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBF,EAAAA,EAAAA,KAAA,QAAMK,SAAU,SAACC,GAAC,OAlCE,SAACA,GACzBA,EAAEC,iBACFjB,EAAAA,EACGkB,KAAK,0DAA2D,CAC/DC,KAAM1B,IAEPS,MAAK,SAACC,GACLI,QAAQC,IAAIL,GACZJ,GACF,IACCM,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZc,MAAM,qBACR,GACJ,CAoB6BC,CAAoBL,EAAE,EAACJ,UAC5CE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLT,UAAU,eACVU,YAAY,yBACZC,MAAO/B,EACPgC,SAAU,SAACT,GAAC,OAAKtB,EAAiBsB,EAAEU,OAAOF,MAAM,KAEnDd,EAAAA,EAAAA,KAAA,UAAQG,UAAU,mBAAmBS,KAAK,SAAQV,SAAC,4BAMzDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,uCAAsCD,SAAA,EACrDF,EAAAA,EAAAA,KAAA,SAAAE,UACEE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBAGRF,EAAAA,EAAAA,KAAA,SAAAE,SACGf,EAAkB8B,KAAI,SAACC,EAAMC,GAC5B,OACEf,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKiB,EAAQ,KACbnB,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAKT,QACVT,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAHGiB,EAMb,iBAQhB,EC0CA,EAxHyB,WACvB,IAAAxC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CyC,EAAWvC,EAAA,GAAEwC,EAAcxC,EAAA,GAClCI,GAAkDL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvDqC,EAAiBpC,EAAA,GAAEqC,EAAoBrC,EAAA,GAC9CsC,GAAsC5C,EAAAA,EAAAA,UAAS,IAAG6C,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAkDhD,EAAAA,EAAAA,UAAS,IAAGiD,GAAA/C,EAAAA,EAAAA,GAAA8C,EAAA,GAAvDzC,EAAiB0C,EAAA,GAAEzC,EAAoByC,EAAA,GAiBxCC,EAAuB,WAC3BxC,EAAAA,EACGC,IAAI,+DACJC,MAAK,SAACC,GACLkC,EAAelC,EAAIC,KAAKA,KAC1B,IACCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,EAeA,OAJAG,EAAAA,EAAAA,YAAU,WATRT,EAAAA,EACGC,IAAI,wDACJC,MAAK,SAACC,GACLL,EAAqBK,EAAIC,KAAKA,KAChC,IACCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IAIFkC,GACF,GAAG,KAED9B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBF,EAAAA,EAAAA,KAAA,QAAMK,SAAU,SAACC,GAAC,OA7CA,SAACA,GAC3BA,EAAEC,iBACFjB,EAAAA,EACGkB,KAAK,iEAAkE,CACtEuB,aAAaX,EACbX,KAAKa,IAEN9B,MAAK,SAACC,GACLI,QAAQC,IAAIL,GACZqC,GACF,IACCnC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,CA+BiCoC,CAAoB1B,EAAE,EAACJ,UAC5CE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,MAAKD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,MAAA,UACED,UAAU,cACV8B,GAAG,cACHnB,MAAOM,EACPL,SAAU,SAACT,GAAC,OAAKe,EAAef,EAAEU,OAAOF,MAAM,EAACZ,SAAA,EAEhDF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,0BACPf,EAAkB8B,KAAI,SAACC,EAAMC,GAC5B,OACEnB,EAAAA,EAAAA,KAAA,UAAoBc,MAAOI,EAAKT,KAAKP,SAClCgB,EAAKT,MADKU,EAIjB,QAEFnB,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,cAAahC,SAAC,6BAGjCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,qBAAoBD,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLT,UAAU,eACV8B,GAAG,oBACHnB,MAAOQ,EACPP,SAAU,SAACT,GAAC,OAAKiB,EAAqBjB,EAAEU,OAAOF,MAAM,EACrDD,YAAY,+BAEdb,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,oBAAmBhC,SAAC,8BAGvCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBF,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAAQV,SAAC,wCAMhCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACrBE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,uCAAsCD,SAAA,EACrDF,EAAAA,EAAAA,KAAA,SAAAE,UACEE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8BACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBAGRF,EAAAA,EAAAA,KAAA,SAAAE,SACGwB,EAAYT,KAAI,SAACC,EAAMC,GACtB,OACEf,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAKT,QACVT,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAKa,iBAFHZ,EAKb,iBAQhB,ECmCA,EA1JuB,WACrB,IAAAxC,GAAkDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDQ,EAAiBN,EAAA,GAAEO,EAAoBP,EAAA,GAC9CI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CyC,EAAWxC,EAAA,GAAEyC,EAAczC,EAAA,GAClCsC,GAA0C5C,EAAAA,EAAAA,UAAS,IAAG6C,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAA/CW,EAAaV,EAAA,GAAEW,EAAgBX,EAAA,GACtCG,GAAsChD,EAAAA,EAAAA,UAAS,IAAGiD,GAAA/C,EAAAA,EAAAA,GAAA8C,EAAA,GAA3CR,EAAWS,EAAA,GAAER,EAAcQ,EAAA,GAClCQ,GAAoCzD,EAAAA,EAAAA,UAAS,IAAG0D,GAAAxD,EAAAA,EAAAA,GAAAuD,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAiC7D,EAAAA,EAAAA,UAAS,IAAG8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAWF,EAAA,GAsCvBG,EAAgB,WACpBvD,EAAAA,EAAMC,IAAI,+DAA+DC,MAAK,SAACC,GAC7EmD,EAAYnD,EAAIC,KAAKA,KACvB,GACF,EAOA,OANAG,QAAQC,IAAI,cAAe4B,IAC3B3B,EAAAA,EAAAA,YAAU,WAfRT,EAAAA,EACGC,IAAI,wDACJC,MAAK,SAACC,GACLL,EAAqBK,EAAIC,KAAKA,KAChC,IACCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IAjBFN,EAAAA,EACGC,IAAI,+DACJC,MAAK,SAACC,GACLkC,EAAelC,EAAIC,KAAKA,KAC1B,IACCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IAqBFiD,GACF,GAAG,KAED7C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBF,EAAAA,EAAAA,KAAA,QAAMK,SAAU,SAACC,GAAC,OArDN,SAACA,GACrBA,EAAEC,iBACFjB,EAAAA,EACGkB,KAAK,iEAAkE,CACtEuB,aAAcX,EACd0B,gBAAiBX,EACjB1B,KAAM8B,IAEP/C,MAAK,SAACC,GACLI,QAAQC,IAAIL,GACZoD,GACF,IACClD,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,CAsCiCmD,CAAczC,EAAE,EAACJ,UACtCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,MAAKD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,MAAA,UACED,UAAU,cACV8B,GAAG,cACHnB,MAAOM,EACPL,SAAU,SAACT,GAAC,OAAKe,EAAef,EAAEU,OAAOF,MAAM,EAACZ,SAAA,EAEhDF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,0BACPf,EAAkB8B,KAAI,SAACC,EAAMC,GAC5B,OACEnB,EAAAA,EAAAA,KAAA,UAAoBc,MAAOI,EAAKT,KAAKP,SAClCgB,EAAKT,MADKU,EAIjB,QAEFnB,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,cAAahC,SAAC,6BAGjCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,MAAA,UACED,UAAU,cACVW,MAAOqB,EACPpB,SAAU,SAACT,GAAC,OAAK8B,EAAiB9B,EAAEU,OAAOF,MAAM,EAACZ,SAAA,EAElDF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,0BACPwB,EACEsB,QAAO,SAACC,GAAQ,OAAKA,EAASlB,eAAiBX,CAAW,IAC1DH,KAAI,SAACC,EAAMC,GACV,OACEnB,EAAAA,EAAAA,KAAA,UAAoBc,MAAOI,EAAKT,KAAKP,SAClCgB,EAAKT,MADKU,EAIjB,QAEJnB,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,gBAAehC,SAAC,6BAGnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,qBAAoBD,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLT,UAAU,eACVU,YAAY,kBACZoB,GAAG,aACHnB,MAAOyB,EACPxB,SAAU,SAACT,GAAC,OAAKkC,EAAclC,EAAEU,OAAOF,MAAM,KAEhDd,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,aAAYhC,SAAC,0BAGhCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAAQV,SAAE,iCAMnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACrBE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,QAAOD,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAAE,UACEE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBAGRF,EAAAA,EAAAA,KAAA,SAAAE,SACGyC,EAAU1B,KAAI,SAACC,EAAMC,GACpB,OACEf,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAKT,QACVT,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAK4B,mBACV9C,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAKa,gBACV/B,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAJGiB,EAOb,iBAQhB,ECzIA,EAZyB,WACvB,OACEf,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACCF,EAAAA,EAAAA,KAACkD,EAAS,KACTlD,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACmD,EAAgB,KACjBnD,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACoD,EAAc,MAGrB,C","sources":["components/centers/AddCenter.js","components/centers/AddCenterFeature.js","components/centers/AddCenterFitem.js","components/CenterManagement.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst AddCenter = () => {\r\n    const [addCenterType, setAddCenterType] = useState('')\r\n    const [getCenterTypeData, setGetCenterTypeData] = useState([])\r\n    const handleAddCenterType = (e) => {\r\n        e.preventDefault()\r\n        axios\r\n          .post('https://gym-api-3r8c.onrender.com/api/create-centertype', {\r\n            name: addCenterType,\r\n          })\r\n          .then((res) => {\r\n            console.log(res)\r\n            getCenterTypeDatas()\r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            alert('Failed to Create !')\r\n          })\r\n      }\r\n      const getCenterTypeDatas = () => {\r\n        axios\r\n          .get('https://gym-api-3r8c.onrender.com/api/get-centertype')\r\n          .then((res) => {\r\n            setGetCenterTypeData(res.data.data)\r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n          })\r\n      }\r\n      useEffect(() => {\r\n        getCenterTypeDatas()\r\n        \r\n      }, [])\r\n    return (\r\n    <>\r\n       <div className=\"container\">\r\n       <div className=\"row\">\r\n          <div className=\"col-lg-8\">\r\n            <form onSubmit={(e) => handleAddCenterType(e)}>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Center Type Name\"\r\n                  value={addCenterType}\r\n                  onChange={(e) => setAddCenterType(e.target.value)}\r\n                />\r\n                <button className=\"input-group-text\" type=\"submit\">\r\n                  Add Center Type\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-lg-8\">\r\n            <table className=\"table table-striped table-responsive\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Sl. No</th>\r\n                  <th>Center Type Name</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {getCenterTypeData.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>Edit | Delete</td>\r\n                    </tr>\r\n                  )\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddCenter","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst AddCenterFeature = () => {\r\n  const [getCenterId, setGetCenterId] = useState('')\r\n  const [centerFeatureName, setCenterFeatureName] = useState('')\r\n  const [getCFeature, setGetCFeature] = useState([])\r\n  const [getCenterTypeData, setGetCenterTypeData] = useState([])\r\n  const handleCenterFeature = (e) => {\r\n    e.preventDefault()\r\n    axios\r\n      .post('https://gym-api-3r8c.onrender.com/api/create-centertypefeature', {\r\n        centerTypeId:getCenterId,\r\n        name:centerFeatureName,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        getCenterFeatureData()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const getCenterFeatureData = () => {\r\n    axios\r\n      .get('https://gym-api-3r8c.onrender.com/api/get-centertypefeature')\r\n      .then((res) => {\r\n        setGetCFeature(res.data.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const getCenterTypeDatas = () => {\r\n    axios\r\n      .get('https://gym-api-3r8c.onrender.com/api/get-centertype')\r\n      .then((res) => {\r\n        setGetCenterTypeData(res.data.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    getCenterTypeDatas()\r\n    getCenterFeatureData()\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8\">\r\n            <form onSubmit={(e) => handleCenterFeature(e)}>\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-floating\">\r\n                    <select\r\n                      className=\"form-select\"\r\n                      id=\"getCenterId\"\r\n                      value={getCenterId}\r\n                      onChange={(e) => setGetCenterId(e.target.value)}\r\n                    >\r\n                      <option>Open this select menu</option>\r\n                      {getCenterTypeData.map((item, index) => {\r\n                        return (\r\n                          <option key={index} value={item.name}>\r\n                            {item.name}\r\n                          </option>\r\n                        )\r\n                      })}\r\n                    </select>\r\n                    <label htmlFor=\"getCenterId\">Works with selects</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"form-floating mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"centerFeatureName\"\r\n                      value={centerFeatureName}\r\n                      onChange={(e) => setCenterFeatureName(e.target.value)}\r\n                      placeholder=\"Enter Center Feature Name\"\r\n                    />\r\n                    <label htmlFor=\"centerFeatureName\">Center Feature Name</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <button type=\"submit\">Add Center Feature Name</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <table className=\"table table-striped table-responsive\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Center Type Feature Name</th>\r\n                  <th>Center Type</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {getCFeature.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.centerTypeId}</td>\r\n                    </tr>\r\n                  )\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddCenterFeature\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nconst AddCenterFitem = () => {\r\n  const [getCenterTypeData, setGetCenterTypeData] = useState([])\r\n  const [getCFeature, setGetCFeature] = useState([])\r\n  const [getCFeatureid, setGetCFeatureId] = useState('')\r\n  const [getCenterId, setGetCenterId] = useState('')\r\n  const [centeritem, setCenterItem] = useState('')\r\n  const [getCTItem, setGetCItem] = useState([])\r\n  const handleAddItem = (e) => {\r\n    e.preventDefault()\r\n    axios\r\n      .post('https://gym-api-3r8c.onrender.com/api/create-centerfeatureitem', {\r\n        centerTypeId: getCenterId,\r\n        centerFeatureId: getCFeatureid,\r\n        name: centeritem,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        getCenterItem()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const getCenterFeatureData = () => {\r\n    axios\r\n      .get('https://gym-api-3r8c.onrender.com/api/get-centertypefeature')\r\n      .then((res) => {\r\n        setGetCFeature(res.data.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const getCenterTypeDatas = () => {\r\n    axios\r\n      .get('https://gym-api-3r8c.onrender.com/api/get-centertype')\r\n      .then((res) => {\r\n        setGetCenterTypeData(res.data.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const getCenterItem = () => {\r\n    axios.get('https://gym-api-3r8c.onrender.com/api/get-centerfeatureitem').then((res) => {\r\n      setGetCItem(res.data.data)\r\n    })\r\n  }\r\n  console.log('getCFeature', getCFeature)\r\n  useEffect(() => {\r\n    getCenterTypeDatas()\r\n    getCenterFeatureData()\r\n    getCenterItem()\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8\">\r\n            <form onSubmit={(e) => handleAddItem(e)}>\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 mb-3\">\r\n                  <div className=\"form-floating\">\r\n                    <select\r\n                      className=\"form-select\"\r\n                      id=\"getCenterId\"\r\n                      value={getCenterId}\r\n                      onChange={(e) => setGetCenterId(e.target.value)}\r\n                    >\r\n                      <option>Open this select menu</option>\r\n                      {getCenterTypeData.map((item, index) => {\r\n                        return (\r\n                          <option key={index} value={item.name}>\r\n                            {item.name}\r\n                          </option>\r\n                        )\r\n                      })}\r\n                    </select>\r\n                    <label htmlFor=\"getCenterId\">Works with selects</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 mb-3\">\r\n                  <div className=\"form-floating\">\r\n                    <select\r\n                      className=\"form-select\"\r\n                      value={getCFeatureid}\r\n                      onChange={(e) => setGetCFeatureId(e.target.value)}\r\n                    >\r\n                      <option>Choose Center Feature</option>\r\n                      {getCFeature\r\n                        .filter((filtItem) => filtItem.centerTypeId === getCenterId)\r\n                        .map((item, index) => {\r\n                          return (\r\n                            <option key={index} value={item.name}>\r\n                              {item.name}\r\n                            </option>\r\n                          )\r\n                        })}\r\n                    </select>\r\n                    <label htmlFor=\"getCFeatureid\">Works with selects</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 mb-3\">\r\n                  <div className=\"form-floating mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter Item Name\"\r\n                      id=\"centeritem\"\r\n                      value={centeritem}\r\n                      onChange={(e) => setCenterItem(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"centeritem\">Enter Item Name</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <button type='submit' >Add Feature Item</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Center Type Item</th>\r\n                  <th>Center Type Feature</th>\r\n                  <th>Center Type</th>\r\n                  <th>Center Type</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {getCTItem.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.centerFeatureId}</td>\r\n                      <td>{item.centerTypeId}</td>\r\n                      <td>Edit | Delete</td>\r\n                    </tr>\r\n                  )\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddCenterFitem\r\n","import React  from 'react'\r\nimport AddCenter from './centers/AddCenter'\r\nimport AddCenterFeature from './centers/AddCenterFeature'\r\nimport AddCenterFitem from './centers/AddCenterFitem'\r\n\r\nconst CenterManagement = () => {\r\n  return (\r\n    <>\r\n     <AddCenter/>\r\n      <hr />\r\n      <AddCenterFeature/>\r\n      <hr />\r\n      <AddCenterFitem/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CenterManagement\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","addCenterType","setAddCenterType","_useState3","_useState4","getCenterTypeData","setGetCenterTypeData","getCenterTypeDatas","axios","get","then","res","data","catch","err","console","log","useEffect","_jsx","_Fragment","children","className","_jsxs","onSubmit","e","preventDefault","post","name","alert","handleAddCenterType","type","placeholder","value","onChange","target","map","item","index","getCenterId","setGetCenterId","centerFeatureName","setCenterFeatureName","_useState5","_useState6","getCFeature","setGetCFeature","_useState7","_useState8","getCenterFeatureData","centerTypeId","handleCenterFeature","id","htmlFor","getCFeatureid","setGetCFeatureId","_useState9","_useState10","centeritem","setCenterItem","_useState11","_useState12","getCTItem","setGetCItem","getCenterItem","centerFeatureId","handleAddItem","filter","filtItem","AddCenter","AddCenterFeature","AddCenterFitem"],"sourceRoot":""}