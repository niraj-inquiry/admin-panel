{"version":3,"file":"static/js/7911.db3ef970.chunk.js","mappings":"sSAyVA,IAzTiB,SAAHA,GAAuC,IAADC,EAAhCC,EAAUF,EAAVE,WAAYC,EAAOH,EAAPG,QAASC,EAAIJ,EAAJI,KACvCC,QAAQC,IAAI,uBAAuBF,GACnC,IAAMG,EAAa,CAAC,OAAQ,UAK5BC,IAHiBC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OAEmBC,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,aAAWC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAAvDI,EAAUC,EAAA,GAAEE,EAAaF,EAAA,GAEhCG,GAAkCL,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMa,WAAUC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAApDC,EAASC,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAA0BT,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,OAAMC,GAAAR,EAAAA,EAAAA,GAAAM,EAAA,GAAxCC,EAAKC,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAA8Bb,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,WAAUC,GAAAZ,EAAAA,EAAAA,GAAAU,EAAA,GAAhDG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA8BlB,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,SAAQC,GAAAjB,EAAAA,EAAAA,GAAAe,EAAA,GAA9CC,EAAOC,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,GAAsCtB,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,aAAYC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA1DC,EAAWC,EAAA,GAAEC,EAAcD,EAAA,GAClCE,GAAmC1B,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,WAAUC,GAAAzB,EAAAA,EAAAA,GAAAuB,EAAA,GAArDG,EAAUD,EAAA,GAAEE,EAAYF,EAAA,GAC/BG,GAA4B/B,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMuC,QAAOC,GAAA9B,EAAAA,EAAAA,GAAA4B,EAAA,GAA3CC,EAAMC,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAA0BnC,EAAAA,EAAAA,YAAUoC,GAAAjC,EAAAA,EAAAA,GAAAgC,EAAA,GAA7BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCvC,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAM+C,WAAUC,GAAAtC,EAAAA,EAAAA,GAAAoC,EAAA,GACjEG,GADmBD,EAAA,GAAiBA,EAAA,IACMzC,EAAAA,EAAAA,WAAS,IAAM2C,GAAAxC,EAAAA,EAAAA,GAAAuC,EAAA,GACzDE,IADoBD,EAAA,GAAkBA,EAAA,IACA3C,EAAAA,EAAAA,aAAU6C,IAAA1C,EAAAA,EAAAA,GAAAyC,GAAA,GAChDE,IADkBD,GAAA,GAAgBA,GAAA,IACR7C,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMsD,QAAMC,IAAA7C,EAAAA,EAAAA,GAAA2C,GAAA,GAAxCC,GAAKC,GAAA,GAAEC,GAAQD,GAAA,GACtBE,IAA8BlD,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,SAAQC,IAAAjD,EAAAA,EAAAA,GAAA+C,GAAA,GAA9CC,GAAOC,GAAA,GAAEC,GAAUD,GAAA,GAC1BE,IAA+BtD,EAAAA,EAAAA,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,UAASC,IAAArD,EAAAA,EAAAA,GAAAmD,GAAA,GAAhDG,GAASD,GAAA,GAACE,GAAYF,GAAA,GAC7BG,IAA+B3D,EAAAA,EAAAA,YAAU4D,IAAAzD,EAAAA,EAAAA,GAAAwD,GAAA,GAAlCE,GAASD,GAAA,GAACE,GAAYF,GAAA,GAC7BG,IAAsC/D,EAAAA,EAAAA,YAAUgE,IAAA7D,EAAAA,EAAAA,GAAA4D,GAAA,GAAzCE,GAAaD,GAAA,GAACE,GAAeF,GAAA,GACpCG,IAAqCnE,EAAAA,EAAAA,YAAUoE,IAAAjE,EAAAA,EAAAA,GAAAgE,GAAA,GAAxCE,GAAYD,GAAA,GAACE,GAAeF,GAAA,GAkDnC,OAEEG,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAACC,WAAW,KAAKC,QAASnF,EAC/BC,QAASA,EAAQmF,SAAA,EACjBC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAF,UACXC,EAAAA,EAAAA,KAACE,EAAAA,GAAW,CAAAH,UAAEI,EAAAA,EAAAA,IAAY,OAAJtF,QAAI,IAAJA,OAAI,EAAJA,EAAMuF,KAAM,kBAAkB,0BAEtDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAU,CAAAN,UAETC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,UAAU,wCAAuCR,UACrDC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACD,UAAU,YAAWR,UAEzBJ,EAAAA,EAAAA,MAACc,EAAAA,GAAK,CAACF,UAAU,aAAYR,SAAA,EAC/BJ,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAAAP,SAAA,EACCC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAEHJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAC3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UAEdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,kBAEfP,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CACZC,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,WACjByF,MAAOzF,EACP0F,SAAU,SAACC,GAAC,OAAKxF,EAAcwF,EAAEC,OAAOH,MAAM,EAC9CI,YAAY,aAAaC,aAAa,oBAI5CnB,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAEHJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAC3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UAEdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,kBAEfP,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CACXC,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAMa,UAClBoF,MAAOpF,EACPqF,SAAU,SAACC,GAAC,OAAKpF,EAAaoF,EAAEC,OAAOH,MAAM,EAC7CI,YAAY,YAAYC,aAAa,sBAK7CxB,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAAAP,SAAA,EACHC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAEHJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAC3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UAEdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,sBAEfP,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CACXC,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,MAClBgF,MAAOhF,EAEPiF,SAAU,SAACC,GAAC,OAAKhF,EAASgF,EAAEC,OAAOH,MAAM,EACzCI,YAAY,QAAQC,aAAa,gBAIvCnB,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAEHJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAC3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UAEdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,kBAEfP,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CACTC,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,QACpBuE,MAAOvE,EACPwE,SAAU,SAACC,GAAC,OAAKvE,EAAWuE,EAAEC,OAAOH,MAAM,EAE3CI,YAAY,UACZC,aAAa,qBAMrBxB,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAAAP,SAAA,EACHC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAEHJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAE3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UACdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,qBAEfP,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CACfC,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,QACd0E,MAAO1E,EAEP2E,SAAU,SAACC,GAAC,OAAK3E,EAAW2E,EAAEC,OAAOH,MAAM,EAC3CI,YAAY,WAAWC,aAAa,oBAG1CnB,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAEHJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAE3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UACdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,4BAEfZ,EAAAA,EAAAA,MAACyB,EAAAA,GAAW,CAACC,GAAG,YAEdP,MAAO7D,EACP8D,SAAU,SAACC,GAAC,OAAK9D,EAAa8D,EAAEC,OAAOH,MAAM,EAACf,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBACE,OAATuB,QAAS,IAATA,GAAsB,QAAb5G,EAAT4G,EAAAA,mBAAsB,IAAA5G,OAAb,EAATA,EAAwB6G,KAAI,SAACC,GAAI,OAChCxB,EAAAA,EAAAA,KAAA,UAAAD,SAAoByB,GAAPA,EAAqB,aAK1CxB,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAEHJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAE3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UACdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,qBAGfZ,EAAAA,EAAAA,MAACyB,EAAAA,GAAW,CAACC,GAAG,SAChBR,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAMuC,OAClB0D,MAAO1D,EACP2D,SAAU,SAACC,GAAC,OAAK1D,EAAU0D,EAAEC,OAAOH,MAAM,EAACf,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBACG,OAAV/E,QAAU,IAAVA,OAAU,EAAVA,EAAYuG,KAAI,SAACC,GAAI,OACpBxB,EAAAA,EAAAA,KAAA,UAAAD,SAAoByB,GAAPA,EAAqB,gBAQ5C7B,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAE3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UACdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,qBAEfP,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CACdC,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,YACfmE,MAAOnE,EACPoE,SAAU,SAACC,GAAC,OAAKnE,EAAemE,EAAEC,OAAOH,MAAM,EAC/CI,YAAY,cAAcC,aAAa,oBAG3CxB,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAAAP,SAAA,EACDC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAELJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EACvBC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UAChBC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,kBAGbZ,EAAAA,EAAAA,MAACyB,EAAAA,GAAW,CAACC,GAAG,UACfR,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,QACrBuC,MAAOvC,GACPwC,SAAU,SAACC,GAAC,OAzMd,SAACA,GAAK,IAADS,EACpBC,EAA4B,OAATC,QAAS,IAATA,OAAS,EAATA,EAAAA,WAAqB,SAAAC,GAAC,OAAEA,EAAEC,cAAcb,EAAEC,OAAOH,KAAK,IAC7ErC,GAAWuC,EAAEC,OAAOH,OACpBpB,GAAgBgC,GAChBxC,GAAyC,QAA7BuC,EAACE,EAAUD,UAAkB,IAAAD,OAAA,EAA5BA,EAA8BK,OAE9C,CAmMuCC,CAAgBf,EAAE,EAACjB,SAAA,EAChCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,2BACE,OAAT4B,QAAS,IAATA,OAAS,EAATA,EAAAA,KAAe,SAACH,GAAI,OACnBxB,EAAAA,EAAAA,KAAA,UAAAD,SAAyByB,EAAKK,cAAjBL,EAAKQ,KAAkC,aAK5DhC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAEHJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAC/BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UAChBC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,qBAGbZ,EAAAA,EAAAA,MAACyB,EAAAA,GAAW,CAACC,GAAG,QACZR,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAMsD,MACxB2C,MAAO3C,GACP4C,SAAU,SAACC,GAAC,OAlOT,SAACA,GAAK,IAADiB,EAAAC,EAAAC,EACxB9D,GAAS2C,EAAEC,OAAOH,OAClB,IAAIsB,EAAwC,QAAzBH,EAAEN,EAAUlC,WAAa,IAAAwC,OAAA,EAAvBA,EAAyBH,OAAOO,WAAU,SAAAT,GAAC,OAAEA,EAAEzD,OAAO6C,EAAEC,OAAOH,KAAK,IACzFxB,GAAuC,QAAxB4C,EAACP,EAAUlC,WAAa,IAAAyC,GAAyB,QAAzBC,EAAvBD,EAAyBJ,OAAOM,UAAgB,IAAAD,OAAzB,EAAvBA,EAAkDtD,UAEtE,CA6NqCyD,CAActB,EAAE,EAACjB,SAAA,EAChCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,yBACE,OAATd,SAAS,IAATA,QAAS,EAATA,GAAWsC,KAAI,SAACC,EAAKe,GAAK,OACzBvC,EAAAA,EAAAA,KAAA,UAAAD,SAA0ByB,EAAKrD,OAAlBqD,EAAKV,MAA4B,aAKlDd,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAT,UAECJ,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EACnCC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UAChBC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,qBAEfZ,EAAAA,EAAAA,MAACyB,EAAAA,GAAW,CAACC,GAAG,UACfR,aAAkB,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,SACrBmC,MAAOjC,GACRkC,SAAU,SAACC,GAAC,OAAKlC,GAAakC,EAAEC,OAAOH,MAAM,EAACf,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,6BACM,OAAbV,SAAa,IAAbA,QAAa,EAAbA,GAAekC,KAAI,SAACC,EAAKe,GAAK,OAC7BvC,EAAAA,EAAAA,KAAA,UAAAD,SAAoByB,GAAPA,EAAqB,gBAQ5C7B,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACH,UAAU,OAAMR,SAAA,EAI3BC,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAAAZ,UACdC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,mBAEfP,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CACTG,SAAU,SAACyB,GAEd9E,EAAS8E,EAAMvB,OAAOwB,MAAM,GACzB,EACAC,KAAK,OACLC,OAAO,UACPzB,YAAY,gCAKXlB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,SAAQR,UACxBC,EAAAA,EAAAA,KAAC4C,EAAAA,GAAO,CAACC,QAAS,kBAnQrB,WACX,IAAMC,EAAW,IAAIC,SAErBD,EAASE,OAAO,cAAa7C,EAAAA,EAAAA,IAAQ9E,GAAYR,EAAKQ,WAAWA,GACjEyH,EAASE,OAAO,aAAY7C,EAAAA,EAAAA,IAAQzE,GAAWb,EAAKa,UAAWA,GAC/DoH,EAASE,OAAO,SAAU7C,EAAAA,EAAAA,IAAQrE,GAAOjB,EAAKiB,MAAOA,GACrDgH,EAASE,OAAO,WAAW7C,EAAAA,EAAAA,IAAQ5D,GAAS1B,EAAK0B,QAASA,GAC1DuG,EAASE,OAAO,WAAW7C,EAAAA,EAAAA,IAAQ/D,GAASvB,EAAKuB,QAAQA,GACzD0G,EAASE,OAAO,cAAa7C,EAAAA,EAAAA,IAAQlD,GAAYpC,EAAKoC,WAAWA,GACjE6F,EAASE,OAAO,UAAU7C,EAAAA,EAAAA,IAAQ/C,GAAQvC,EAAKuC,OAAQA,GACvD0F,EAASE,OAAO,eAAe7C,EAAAA,EAAAA,IAAQxD,GAAa9B,EAAK8B,YAAaA,GACtEmG,EAASE,OAAO,WAAU7C,EAAAA,EAAAA,IAAQ5B,IAAS1D,EAAK0D,QAAUA,IAC1DuE,EAASE,OAAO,SAAU7C,EAAAA,EAAAA,IAAQhC,IAAOtD,EAAKsD,MAAOA,IACrD2E,EAASE,OAAO,YAAW7C,EAAAA,EAAAA,IAAQtB,IAAWhE,EAAKgE,UAAWA,IAC9DiE,EAASE,OAAO,QAASvF,GAExBwF,EAAAA,GAAAA,KAAS,iCAAkCH,GAAUI,MAAK,SAAAC,GAAQ,IAADC,EAGhCC,EAK5BC,EAPJxI,QAAQC,IAAI,cAAkB,OAAHoI,QAAG,IAAHA,OAAG,EAAHA,EAAKtI,KAAMA,IAEZ,KAAnB,OAAHsI,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKtI,YAAI,IAAAuI,OAAN,EAAHA,EAAWG,SACbC,MAAS,OAAHL,QAAG,IAAHA,GAAS,QAANE,EAAHF,EAAKtI,YAAI,IAAAwI,OAAN,EAAHA,EAAWI,SAEjB7I,KAGA4I,MAAS,OAAHL,QAAG,IAAHA,GAAS,QAANG,EAAHH,EAAKtI,YAAI,IAAAyI,OAAN,EAAHA,EAAWG,QAGrB,GAEJ,CAqOwCC,EAAU,EAAEnD,UAAU,aAAYR,SAAC,6BAU3E,C","sources":["components/modals/AddTeams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CImage,\r\n  CAlert,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilLockLocked, cilUser, cilEnvelopeClosed, cilBurn } from '@coreui/icons'\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\"\r\nimport { API, axiosInstance, isEmpty, baseurl } from 'src/globalfunction'\r\nimport axios from 'axios';\r\nimport * as Images from \"../../assets\";\r\nimport PropTypes from 'prop-types';\r\nimport ImageShow from \"../ImageShow\";\r\nimport Countries from '../../json/Countries.json'\r\nimport Occuption from '../../json/Occuption.json'\r\n\r\nconst AddTeams = ({ isshowform, onClose, data }) => {\r\n  console.log(\"addteam-------------\",data)\r\n  const genderlist = [\"Male\", \"Female\"]\r\n  const usertypelist = [{ _di: \"1\", rolename: \"admin\" }, { _di: \"2\", rolename: \"superadmin\" }]\r\n  const navigate = useNavigate()\r\n  const location = useLocation();\r\n\r\n  const [first_name, setFirst_name] = useState(data?.first_name)\r\n\r\n  const [last_name, setLast_name] = useState(data?.last_name)\r\n  const [email, setEmail] = useState(data?.email)\r\n  const [pincode, setPincode] = useState(data?.post_code)\r\n  const [address, setAddress] = useState(data?.address)\r\n  const [description, setDescription] = useState(data?.description)\r\n  const [occupation, setOccuption] = useState(data?.occuption)\r\n  const [gender, setGender] = useState(data?.gender)\r\n  const [image, setImage] = useState()\r\n  const [userTypelist, setUserTypelist] = useState(data?.user_type);\r\n  const [allemptyfield, setAllemptyfield] = useState(false);\r\n  const [updateimage, setUpdateimage] = useState();\r\n  const [state, setState] = useState(data?.state)\r\n  const [country, setCountry] = useState(data?.country)\r\n  const [districts,setDistricts]=useState(data?.district)\r\n  const [statelist,setStatelist]=useState()\r\n  const [districtslist,setDistrictlist]=useState()\r\n  const [countryindex,setCountryindex]=useState()\r\n  \r\n  const  onSelectstate=(e)=>{\r\n    setState(e.target.value)\r\n    let stateindexvalue= Countries[countryindex]?.states.findIndex(x=>x.state==e.target.value)\r\n    setDistrictlist(Countries[countryindex]?.states[stateindexvalue]?.districts)\r\n \r\n}\r\n\r\nconst onSelectCountry=(e)=>{\r\n   let countryindexvalue= Countries?.findIndex(x=>x.country_name==e.target.value)\r\n   setCountry(e.target.value)\r\n   setCountryindex(countryindexvalue)\r\n   setStatelist(Countries[countryindexvalue]?.states)\r\n\r\n}\r\n\r\nconst onCreate=()=>{\r\n    const formdata = new FormData()\r\n\r\n    formdata.append(\"first_name\",isEmpty(first_name)?data.first_name:first_name);\r\n    formdata.append(\"last_name\",isEmpty(last_name)?data.last_name: last_name);\r\n    formdata.append(\"email\",  isEmpty(email)?data.email: email);\r\n    formdata.append(\"address\", isEmpty(address)?data.address: address);\r\n    formdata.append(\"pincode\", isEmpty(pincode)?data.pincode:pincode);\r\n    formdata.append(\"occupation\",isEmpty(occupation)?data.occupation:occupation);\r\n    formdata.append(\"gender\", isEmpty(gender)?data.gender: gender);\r\n    formdata.append(\"description\", isEmpty(description)?data.description: description);\r\n    formdata.append(\"country\",isEmpty(country)?data.country:  country);\r\n    formdata.append(\"state\",  isEmpty(state)?data.state: state);\r\n    formdata.append(\"district\",isEmpty(districts)?data.districts: districts  );\r\n    formdata.append(\"image\", image);\r\n\r\n     API.post('v.1.0/team/add-new-team-member', formdata).then(res => {\r\n      console.log('update data', res?.data, data)\r\n    \r\n      if (res?.data?.status === true) {\r\n        alert(res?.data?.message)\r\n    \r\n        onClose()\r\n      }\r\n      else{\r\n        alert(res?.data?.message)\r\n      }\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\n  return (\r\n\r\n    <CModal fullscreen=\"md\" visible={isshowform}\r\n      onClose={onClose}>\r\n      <CModalHeader>\r\n        <CModalTitle>{isEmpty(data?._id) ?'Add Team Member':\"Update Team Member\"}</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        {/* <CContainer className='ms-0'> */}\r\n        <CRow className=\"border mx-4 my-3 modal-shadow rounded\">\r\n          <CCol className='px-4 py-3'>\r\n     \r\n            <CForm className='text-start'>\r\n          <CRow>\r\n                <CCol>\r\n                  {/* First name */}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      {/* <CIcon icon={cilUser} /> */}\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                   defaultValue={data?.first_name}\r\n                      value={first_name}\r\n                      onChange={(e) => setFirst_name(e.target.value)}\r\n                      placeholder=\"First Name\" autoComplete=\"firstname\" />\r\n                  </CInputGroup>\r\n                </CCol>\r\n\r\n                <CCol>\r\n                  {/* Last name */}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      {/* <CIcon icon={cilUser} /> */}\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                    defaultValue={data?.last_name}\r\n                      value={last_name}\r\n                      onChange={(e) => setLast_name(e.target.value)}\r\n                      placeholder=\"Last Name\" autoComplete=\"lastname\" />\r\n                  </CInputGroup>\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol>\r\n                  {/*email  */}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      {/* <CIcon icon={cilEnvelopeClosed} /> */}\r\n                      <i className=\"fa fa-envelope\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                    defaultValue={data?.email}\r\n                      value={email}\r\n                    //   type=\"email\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      placeholder=\"Email\" autoComplete=\"email\" />\r\n                  </CInputGroup>\r\n                </CCol>\r\n\r\n                <CCol>\r\n                  {/*email  password*/}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      {/* <CIcon icon={cilLockLocked} /> */}\r\n                      <i className=\"fa fa-lock\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      defaultValue={data?.address}\r\n                      value={address}\r\n                      onChange={(e) => setAddress(e.target.value)}\r\n                    \r\n                      placeholder=\"Address\"\r\n                      autoComplete=\"address\"\r\n                    />\r\n                  </CInputGroup>\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol>\r\n                  {/*post_code  */}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    {/* <CInputGroupText>@</CInputGroupText> */}\r\n                    <CInputGroupText>\r\n                      <i className=\"fa fa-map-pin\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                defaultValue={data?.pincode}\r\n                      value={pincode}\r\n                    //   type=\"number\"\r\n                      onChange={(e) => setPincode(e.target.value)}\r\n                      placeholder=\"Pin Code\" autoComplete=\"post_code\" />\r\n                  </CInputGroup>\r\n                </CCol>\r\n                <CCol>\r\n                  {/*user_type*/}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    {/* <CInputGroupText>@</CInputGroupText> */}\r\n                    <CInputGroupText>\r\n                      <i className=\"fa fa-location-arrow\"></i>\r\n                    </CInputGroupText>\r\n                    <CFormSelect id=\"user_type\"\r\n                    //   defaultValue={data?.user_type}\r\n                      value={occupation}\r\n                      onChange={(e) => setOccuption(e.target.value)}>\r\n                      <option>Choose occuption...</option>\r\n                      {Occuption?.occupations?.map((item) => (\r\n                        <option key={item}>{item}</option>\r\n                      ))}\r\n                    </CFormSelect>\r\n                  </CInputGroup>\r\n                </CCol>\r\n                <CCol>\r\n                  {/*gender  */}\r\n                  <CInputGroup className=\"mb-3\">\r\n                    {/* <CInputGroupText>@</CInputGroupText> */}\r\n                    <CInputGroupText>\r\n                      <i className='fa fa-mercury'></i>\r\n                    </CInputGroupText>\r\n\r\n                    <CFormSelect id=\"gender\"\r\n                    defaultValue={data?.gender}\r\n                      value={gender}\r\n                      onChange={(e) => setGender(e.target.value)}>\r\n                      <option>Choose Gender...</option>\r\n                      {genderlist?.map((item) => (\r\n                        <option key={item}>{item}</option>\r\n                      ))}\r\n                    </CFormSelect>\r\n                  </CInputGroup>\r\n                </CCol>\r\n              </CRow>\r\n\r\n              {/*description  */}\r\n              <CInputGroup className=\"mb-3\">\r\n                {/* <CInputGroupText>@</CInputGroupText> */}\r\n                <CInputGroupText>\r\n                  <i className=\"fa fa-comment\"></i>\r\n                </CInputGroupText>\r\n                <CFormInput\r\n             defaultValue={data?.description}\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  placeholder=\"Description\" autoComplete=\"description\" />\r\n              </CInputGroup>\r\n\r\n              <CRow>\r\n                  <CCol>\r\n                  {/* {'country'} */}\r\n                  <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                        <i className=\"fa fa-flag\"></i>\r\n                        </CInputGroupText>\r\n\r\n                        <CFormSelect id=\"country\"\r\n                         defaultValue={data?.country}\r\n                        value={country}\r\n                        onChange={(e)=>onSelectCountry(e)} >\r\n                          <option>Choose Your Country...</option>\r\n                          {Countries?.map((item) => (\r\n                            <option key={item.code}>{item.country_name}</option>\r\n                          ))}\r\n                        </CFormSelect>\r\n                      </CInputGroup>\r\n                  </CCol>\r\n                    <CCol>\r\n                      {/* {'state'} */}\r\n                      <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                    <i className=\"fa fa-map-pin\"></i>\r\n                    </CInputGroupText>\r\n\r\n                    <CFormSelect id=\"state\" \r\n                        defaultValue={data?.state}\r\n                    value={state}\r\n                    onChange={(e) => onSelectstate(e)} >\r\n                      <option>Choose Your State...</option>\r\n                      {statelist?.map((item,index) => (\r\n                        <option key={item.value}>{item.state}</option>\r\n                      ))}\r\n                    </CFormSelect>\r\n                  </CInputGroup>\r\n                    </CCol>\r\n                    <CCol>\r\n                          {/* {'district'} */}\r\n                          <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                    <i className=\"fa fa-map-pin\"></i>\r\n                    </CInputGroupText>\r\n                  <CFormSelect id=\"distict\" \r\n                   defaultValue={data?.district}\r\n                  value={districts}\r\n                 onChange={(e) => setDistricts(e.target.value)}  >\r\n                      <option>Choose Your Districts...</option>\r\n                      {districtslist?.map((item,index) => (\r\n                        <option key={item}>{item}</option>\r\n                      ))}\r\n                    </CFormSelect>\r\n                  </CInputGroup>\r\n                    </CCol>\r\n                 </CRow>\r\n\r\n              {/*image*/}\r\n              <CInputGroup className=\"mb-3\">\r\n                {/* <CInputGroupText>\r\n                      *\r\n                    </CInputGroupText> */}\r\n                <CInputGroupText>\r\n                  <i className=\"fa fa-image\"></i>\r\n                </CInputGroupText>\r\n                <CFormInput\r\n                  onChange={(event) => {\r\n                   \r\n               setImage(event.target.files[0]);\r\n                  }}\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  placeholder=\"Please Enter your image\"\r\n                />\r\n              </CInputGroup>\r\n\r\n\r\n                   <div className=\"d-grid\">\r\n                  <CButton onClick={()=>onCreate()} className=\"update_btn\">Add Account</CButton>\r\n                </div>\r\n            </CForm>\r\n   \r\n          </CCol>\r\n        </CRow>\r\n  \r\n      </CModalBody>\r\n    </CModal>\r\n  )\r\n}\r\n\r\nexport default AddTeams\r\nAddTeams.propTypes = {\r\n  isshowform: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  data: PropTypes.object,\r\n\r\n};\r\n"],"names":["_ref","_Occuption$occupation","isshowform","onClose","data","console","log","genderlist","_useState","useNavigate","useLocation","useState","first_name","_useState2","_slicedToArray","setFirst_name","_useState3","last_name","_useState4","setLast_name","_useState5","email","_useState6","setEmail","_useState7","post_code","_useState8","pincode","setPincode","_useState9","address","_useState10","setAddress","_useState11","description","_useState12","setDescription","_useState13","occuption","_useState14","occupation","setOccuption","_useState15","gender","_useState16","setGender","_useState17","_useState18","image","setImage","_useState19","user_type","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","state","_useState26","setState","_useState27","country","_useState28","setCountry","_useState29","district","_useState30","districts","setDistricts","_useState31","_useState32","statelist","setStatelist","_useState33","_useState34","districtslist","setDistrictlist","_useState35","_useState36","countryindex","setCountryindex","_jsxs","CModal","fullscreen","visible","children","_jsx","CModalHeader","CModalTitle","isEmpty","_id","CModalBody","CRow","className","CCol","CForm","CInputGroup","CInputGroupText","CFormInput","defaultValue","value","onChange","e","target","placeholder","autoComplete","CFormSelect","id","Occuption","map","item","_Countries$countryind4","countryindexvalue","Countries","x","country_name","states","onSelectCountry","code","_Countries$countryind","_Countries$countryind2","_Countries$countryind3","stateindexvalue","findIndex","onSelectstate","index","event","files","type","accept","CButton","onClick","formdata","FormData","append","API","then","res","_res$data","_res$data2","_res$data3","status","alert","message","onCreate"],"sourceRoot":""}