{"version":3,"file":"static/js/3912.57f5d532.chunk.js","mappings":"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","sources":["views/pages/lists/TeamList.js"],"sourcesContent":["import {\r\n    CTable,\r\n    CTableHead,\r\n    CTableRow,\r\n    CTableHeaderCell,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CButton,\r\n    CRow,\r\n    CCol,\r\n    CImage\r\n  } from '@coreui/react'\r\n  import axios from 'axios';\r\n  import React, { useState, useEffect } from \"react\";\r\n  import { useNavigate } from 'react-router-dom';\r\n  import ImageShow from 'src/components/ImageShow';\r\n  import { API, convertfirstletter, fetchImage } from 'src/globalfunction';\r\n  import * as Images from '../../../assets';\r\n  import AddTeams from 'src/components/modals/AddTeams';\r\n  import { Pagination } from 'src/components/Pagination';\r\n  \r\n  const TeamList = () => {\r\n    const [userlist, setUserlist] = useState();\r\n    const [isshowform, setIsshowform] = useState();\r\n    const [updatedata, setUpdatedata] = useState();\r\n  const [showdata,setShowdata]=useState([])\r\n    const navigate = useNavigate();\r\n    const onLoad = () => {\r\n      \r\n      API.get('v.1.0/team/get-all-team-info').then(res => {\r\n        console.log(\"userlist\", res.data.data)\r\n        if (res?.data?.status) {\r\n            console.log('userlist', res?.data?.data)\r\n          setUserlist(res?.data?.data)\r\n          \r\n         \r\n        }\r\n      }).catch(err => {\r\n        console.log(\"Error\", err);\r\n        navigate('404')\r\n  \r\n      })\r\n    }\r\n\r\n  \r\n    const onUpdate = (items) => {\r\n      \r\n      // navigate('/users/register', { state: item })\r\n      setUpdatedata(items)\r\n    \r\n      // setUserlist(items)\r\n      // console.log('updatedata',item)\r\n      setIsshowform(true)\r\n    }\r\n  \r\n    // console.log('userlist', updatedata)\r\n  \r\n    const onDelete = (userid) => {\r\n      API.delete(`v.1.0/team/delete-team-info/${userid}`).then(res => {\r\n        if (res.data.status) {\r\n          onLoad()\r\n          alert(res.data.message)\r\n       \r\n        }\r\n      })\r\n    }\r\n    const onShowPagedata=(data)=>{\r\n     setShowdata(data)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      onLoad()\r\n}, [isshowform,updatedata])\r\n    return (\r\n      <>\r\n      <AddTeams isshowform={isshowform} onClose={() => setIsshowform(false)}\r\n          data={updatedata} \r\n            \r\n          />\r\n              <div className='table-responsive'>\r\n      \r\n        <div onClick={() => {setUpdatedata() ;setIsshowform(true)}} className='button-1 '>\r\n          {\"+ Add New Team Member\"}\r\n        </div>\r\n        <CTable>\r\n          <CTableHead>\r\n            <CTableRow>\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>#</CTableHeaderCell>\r\n              {/* <CTableHeaderCell scope=\"col\">{\"_id\"}</CTableHeaderCell> */}\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Name\"}</CTableHeaderCell>\r\n              {/* <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Last Name\"}</CTableHeaderCell> */}\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Email\"}</CTableHeaderCell>\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Pincode\"}</CTableHeaderCell>\r\n              {/* <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Description\"}</CTableHeaderCell> */}\r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Gender\"}</CTableHeaderCell>\r\n             \r\n              <CTableHeaderCell scope=\"col\" className='fw-bold'>{\"Photo\"}</CTableHeaderCell>\r\n              <CTableHeaderCell scope=\"col\" className=' fw-bold'>{\"Action\"}</CTableHeaderCell>\r\n  \r\n            </CTableRow>\r\n          </CTableHead>\r\n          <CTableBody className='body-divider'>\r\n            {userlist?.length > 0 && (userlist?.map((items, index) => (\r\n              <CTableRow key={index}>\r\n                <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\r\n                {/* <CTableDataCell>{items?._id}</CTableDataCell> */}\r\n                <CTableDataCell>{convertfirstletter(items?.first_name)} {items?.last_name}</CTableDataCell>\r\n                {/* <CTableDataCell>{items?.last_name}</CTableDataCell> */}\r\n                <CTableDataCell>{items?.email}</CTableDataCell>\r\n                <CTableDataCell>{items?.pincode}</CTableDataCell> \r\n                {/* <CTableDataCell>{items?.description}</CTableDataCell> */}\r\n                <CTableDataCell>{items?.gender}</CTableDataCell>\r\n              \r\n                <CTableDataCell>\r\n                  <ImageShow imageurl={items?.photo} />\r\n                </CTableDataCell>\r\n                <CTableDataCell>\r\n                  {/* <CButton color=\"link\" onClick={()=>onUpdate(items)}>Update</CButton> */}\r\n                  <CRow className='gym_action mx-auto'>\r\n                    <CCol>\r\n                      <CImage\r\n  \r\n                        rounded\r\n                        src={Images.eye_icon}\r\n  \r\n                        className=\"icons\"\r\n                      />\r\n  \r\n                    </CCol>\r\n                    <CCol onClick={() => onUpdate(items)}>\r\n                      <CImage\r\n  \r\n                        rounded\r\n                        src={Images.user_icon}\r\n  \r\n                        className=\"icons\"\r\n                      />\r\n                    </CCol>\r\n                    <CCol onClick={() => onDelete(items?._id)}>\r\n                      <CImage\r\n  \r\n                        rounded\r\n                        src={Images.delete_icon}\r\n  \r\n                        className=\"icons\"\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </CTableDataCell>\r\n        \r\n              </CTableRow>\r\n            )\r\n  ))}\r\n  \r\n  \r\n          </CTableBody>\r\n        </CTable>\r\n        {/* <Pagination data={userlist} onShowPage={(start,end,data)=>onShowPagedata(start,end,data)}/> */}\r\n      </div>\r\n      </>\r\n  \r\n    )\r\n  }\r\n  export default TeamList"],"names":["_useState","useState","_useState2","_slicedToArray","userlist","setUserlist","_useState3","_useState4","isshowform","setIsshowform","_useState5","_useState6","updatedata","setUpdatedata","_useState7","_useState8","navigate","useNavigate","onLoad","API","then","res","_res$data","_res$data2","_res$data3","console","log","data","status","catch","err","useEffect","_jsxs","_Fragment","children","_jsx","AddTeams","onClose","className","onClick","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","length","map","items","index","CTableDataCell","convertfirstletter","first_name","last_name","email","pincode","gender","ImageShow","imageurl","photo","CRow","CCol","CImage","rounded","src","Images","onUpdate","userid","_id","concat","alert","message"],"sourceRoot":""}